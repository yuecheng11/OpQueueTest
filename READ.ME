第一，在本程序中，入队列和出队列是在同一个函数中完成的，但是，在实际开发项目的程序中，入队列和出队列一般是在不同的程序流程(两个不同的线程)中完成的。

第二，本程序的数据入队列操作是在EnQueue函数中完成的，数据出队列操作是在DeQueue函数中完成的，全局变量g_tQueue用于存放需要处理的数据。

第三，在实际开发项目的程序中，有可能会有很多流程都会调用入队列和出队列的函数，为了防止多个流程同时向队列中加入数据或取出数据，在EnQueue和DeQueue函数中使用了锁操作。也就是说，在操作数据之前，先用pthread_mutex_lock函数执行加锁操作，在处理完数据之后，再用pthread_mutex_unlock函数执行解锁操作。

第四，在实际开发项目中，为了防止程序从队列中取数据的速率过快而使得下游模块处理不过来，我们常在从队列取出数据之后发消息的流程中控制数据的发送速率，具体每秒钟发送多少条可在配置文件中设置。
